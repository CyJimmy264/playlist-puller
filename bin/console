#!/usr/bin/env ruby

require "bundler/setup"

require 'active_support/all'
require 'playlist'
require 'playlist/puller'
require 'down'
require 'ruby-progressbar'

# You can add fixtures and/or initialization code here to make experimenting
# with your gem easier. You can also use a different console, if you like.

# (If you use this, don't forget to add pry to your Gemfile!)
# require "irb"
# IRB.start(__FILE__)

require "pry"

DEST = "/home/mveynberg/Музыка/VK"

playlist = nil
File.open(Dir["/home/mveynberg/Музыка/Музыка\ Максима\ Вейнберга*"].sort.last) do |file|
  playlist = Playlist::Format::M3U.parse(file)
end

vk_playlist = Playlist.new title: "VK"

def sanitize(str)
  str.gsub(/[\%\/\-]/) { |c| '%%%02X' % c.ord }.truncate(100, separator: /\s/)
end

tracks_hash = {}

def suffix_num_str(suffix_num)
  suffix_num ? " (#{suffix_num})" : ""
end

def track_name(artist, title, suffix_num)
  "#{artist} - #{title}#{suffix_num_str(suffix_num)}"
end

def track_filename(artist, title, suffix_num)
  "#{track_name(artist, title, suffix_num)}.mp3"
end

playlist.tracks.each do |track|
  title = sanitize track.title
  artist = sanitize track.contributor_names
  suffix_num = nil

  track_filepath = "#{DEST}/#{track_filename(artist, title, suffix_num)}"

  while tracks_hash[track_filepath]
    suffix_num = suffix_num ? suffix_num + 1 : 1
    track_filepath = "#{DEST}/#{track_filename(artist, title, suffix_num)}"
  end
  tracks_hash[track_filepath] = true


  unless File.file?(track_filepath)
    puts "Down #{track_name(artist, title, suffix_num)} (#{track_filepath})"

    progressbar = ProgressBar.create(format: '%a <%B> %p%% %t')

    begin
    Down.download track.location,
                  destination: track_filepath,
                  content_length_proc: -> (content_length) { progressbar.total = content_length },
                  progress_proc:       -> (progress)       { progressbar.progress = progress }
    rescue
      puts "Failed"
    end
  end
end
